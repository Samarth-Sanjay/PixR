{"ast":null,"code":"import _classCallCheck from \"/Users/samarthsanjay/reactApp/pics/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samarthsanjay/reactApp/pics/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samarthsanjay/reactApp/pics/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samarthsanjay/reactApp/pics/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/samarthsanjay/reactApp/pics/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/samarthsanjay/reactApp/pics/src/components/ImageCard.js\";\nimport React, { Component } from 'react';\n\nvar ImageCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImageCard, _Component);\n\n  function ImageCard(props) {\n    var _this;\n\n    _classCallCheck(this, ImageCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageCard).call(this, props));\n\n    _this.setSpans = function () {\n      var height = _this.imageRef.current.clientHeight;\n      var spans = Math.ceil(height / 150 + 1);\n\n      _this.setState({\n        spans: spans\n      });\n    };\n\n    _this.state = {\n      spans: 0\n    };\n    _this.imageRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(ImageCard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$image = this.props.image,\n          description = _this$props$image.description,\n          urls = _this$props$image.urls;\n      return React.createElement(\"div\", {\n        style: {\n          gridRowEnd: \"span \".concat(this.state.span)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        ref: this.imageRef,\n        alt: description,\n        src: urls.regular,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ImageCard;\n}(Component);\n\nexport default ImageCard;","map":{"version":3,"sources":["/Users/samarthsanjay/reactApp/pics/src/components/ImageCard.js"],"names":["React","Component","ImageCard","props","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","setState","state","createRef","addEventListener","image","description","urls","gridRowEnd","span","regular"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;IAEMC,S;;;;;AACF,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,mFAAMA,KAAN;;AADc,UASlBC,QATkB,GASP,YAAM;AACb,UAAMC,MAAM,GAAG,MAAKC,QAAL,CAAcC,OAAd,CAAsBC,YAArC;AACA,UAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUN,MAAM,GAAG,GAAT,GAAe,CAAzB,CAAd;;AACA,YAAKO,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACH,KAbiB;;AAEd,UAAKI,KAAL,GAAa;AAACJ,MAAAA,KAAK,EAAG;AAAT,KAAb;AACA,UAAKH,QAAL,GAAgBN,KAAK,CAACc,SAAN,EAAhB;AAHc;AAKjB;;;;wCACmB;AAChB,WAAKR,QAAL,CAAcC,OAAd,CAAsBQ,gBAAtB,CAAuC,MAAvC,EAA+C,KAAKX,QAApD;AACH;;;6BAOQ;AAAA,8BAEuB,KAAKD,KAAL,CAAWa,KAFlC;AAAA,UAEEC,WAFF,qBAEEA,WAFF;AAAA,UAEeC,IAFf,qBAEeA,IAFf;AAGL,aACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,iBAAW,KAAKN,KAAL,CAAWO,IAAtB;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,GAAG,EAAE,KAAKd,QADd;AAEI,QAAA,GAAG,EAAEW,WAFT;AAGI,QAAA,GAAG,EAAEC,IAAI,CAACG,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AASH;;;;EA5BmBpB,S;;AA+BxB,eAAeC,SAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass ImageCard extends Component {\n    constructor(props){\n        super(props);\n        this.state = {spans : 0};\n        this.imageRef = React.createRef();\n\n    }\n    componentDidMount() {\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n    setSpans = () => {\n        const height = this.imageRef.current.clientHeight;\n        const spans = Math.ceil(height / 150 + 1);\n        this.setState({spans: spans});\n    }\n\n    render() {\n\n        const {description, urls} = this.props.image;\n        return (\n            <div style={{gridRowEnd : `span ${this.state.span}`}}>\n                <img\n                    ref={this.imageRef}\n                    alt={description}\n                    src={urls.regular} />\n            </div>\n    )\n        ;\n    }\n}\n\nexport default ImageCard;"]},"metadata":{},"sourceType":"module"}